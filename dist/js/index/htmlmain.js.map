{"version":3,"sources":["domain/domain.ts","infra/infra.ts","infra/InMemoryDataStore.ts","infra/ActionRepositoryImpl.ts","infra/ObjectiveRepositoryImpl.ts","htmlmain.ts"],"names":[],"mappings":";;;;;;AKAA,IAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;ALSA,AGTA,ADOA,AEPA,AHAA,IDSA,AGTA,ADOA,AEPA,AHAA,QDSA,AGTA,ACAA,AHAA,GEAA,ACAA,AHAA,MCOA,CCPA,ACAA,AHAA,CEAA,ACAA,AHAA,kBEAA,ACAA,AHAA,CEAA,ACAA,AHAA;ADSA,AKFA,AHAA,IGAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ALEA,AGLA,ADGA,AENA,AHMA,IEHA,ACHA,AHMA,QDEA,AEFA,KDAA,MEHA,ACHA,GDGA,ACHA,ODGA,ACHA,CDGA,ACHA,qBDGA,ACHA,CDGA,ACHA;AJSE,AKCF,AHDE,ADHF,IIIA,OLDE,AEAA,QFAA,CACW,MKAb,EHDE,CGCF,AHDc,EFAZ,EAEW,GKDb,CAAA,AHDE,EAAyB,CFAzB,EAGW,KAHX,EAGwB,kBKF1B,CAAA;ALAa,AGJb,ADGE,AELF,AHEA,IEAA,ACFA,IFKE,CFCW,GCJb,CCGE,GAAA,IFCW,AEDX,GFCW,CGJb,GCFA,OJMa;AACA,AKAb,AFLA,ACFA,AHEA,IIKA,KLAa,ECLb,KDKa,GAAA,KCLb,EDKa,CCLb,EIKA,GAAA,OAAA,CAAA,iCAAA,CAAA;ALCa,AGNb,ADII,AENJ,AHGU,SDKG,AEFJ,ADHC,GEDV,ACFA,EJQa,GAAA,CEFT,ADHM,GCGW,ADHC,CDKT,ACLH,CCGN;AFGE,AKAN,AFHE,ADCE,AEHF,AHqID,IClIG,KGEK,CAAT,CAAW,AFHT,ACFA,CFGU,CAAC,MGEb,CHFI,CGEe,AHFE,UCDnB,ADCmB,CCDC,ADCD,EAAC,AEHpB,CAAoB,MDEpB,EAAgD,CCFhD,EAAmD,IDEnD,EAAwE,ICFxE,EAAiF;ACMjF,AFJoB,ADCI,AEHJ,SCMb,AFJa,ACFA,IFGI,IGGT,CAAC,AFJI,ADCQ,AEHR,CFGS,ECDT,ACFA,OFGI,CAAe,CCDnB,ADCoB,AEHpB,CCMb,AHHkC,CGGX,CHHS,CAAK,KAApB,CGGjB,CAAP,EHHqD,CAA7B;AFIxB,AKAD,AFPS,ADG8C,AEL9C,AHKD,EDIP,ACJO,GCAL,ICHM,ACFA,CJSR,CAAA,ICJO,CAAA,EEHC,ACFA,EJSR,CAAA,AGPqD,ACFG,EDEhD,ACFA,CDIgE,ACFS,CDAxB,ACFG,IJS5D,GAAA,KCJO,GAAP,IDIA,MCJ6B,CAA7B,EAA8B;ADK5B,AEJD,ADAC,WDIO,ACJA,IAAI,QAAA,CAAA,SAAA,CAAU,MAAd,CACL,IAAI,QAAA,CAAA,SAAA,CAAU,EAAd,CAAiB,CAAC,CAAC,EAAnB,CADK,EAEL,CAAC,CAAC,KAFG,EAGL,CAAC,CAAC,MAAF,GAAW,IAAI,QAAA,CAAA,SAAA,CAAU,EAAd,CAAiB,CAAC,CAAC,MAAnB,CAAX,GAAwC,IAHnC,EAIL,IAAI,QAAA,CAAA,QAAJ,CACE,CAAC,CAAC,QAAF,CAAW,WADb,EAEE,CAAC,CAAC,QAAF,CAAW,OAAX,IAAsB,EAFxB,EAGE,CAAC,CAAC,QAAF,CAAW,KAAX,GAAmB,CAAC,CAAC,QAAF,CAAW,KAAX,CAAiB,GAAjB,CAAqB,UAAA,CAAA,EAAC;ADF3C,AKDN,AFLI,ACFA,AHUiD,MDF/C,GKDG,AFLA,ACFA,IHU4C,EIHrD,CAAgB,CLCC,ACEwC,EDFtC,KAAK,AKDxB,CJGyD,CIH/B,AJG+B,IAAJ,CAAS,CER1D,AFQ2D,CAAC,CIHhE,CLAW,AGLwB,ACF/B,CCO8B,CJGmB,CGVf,CDEC,AFQ+B,CAAC,CAAC,CGV9B,GHUW,CAAA,YERd,CAAA,ECFG,CAAA,cDEP,CAAgD,ECF7C,CAAsD,IDEzD,CAA/B,KCFkC,CAAlC;AJSE,AKDJ,AFLE,ADEF,AEJE,AHSyE,ECL3E,GDKyB,CDDrB,ACCE,GIFC,AFLA,ACFA,AHSwE,EAH3E,CAJK,CDME,ACNT,EDMW,EKDE,AFLb,ACFA,CCOc,CHHhB,CFIkB,AEJlB,OFES,EEFT,CAAA,CGGO,CAAuB,KHH9B,GGGO,AHHP,EGGwC,UHHxC,MGGO,CAAkD,OAAlD,EAA2D,QAA3D,CAAP;ALEI,AKDL,AFLE,ADCD,AEHC,AHUA,GAVM,GDQH,EELJ,GFKS,EAAE,AELX,GAAA,EFKgB,EELhB,GFKW,CAAW,GAAX,CAAe,UAAA,CAAA,EAAC;AAAI,eAAA,CAAC,CAAC,QAAF,EAAA;AAAY,AKE7C,AFNE,ADAE,AEFF,AHUO,EERP,ACFA,AHUO,EIFH,GLFO,IEJF,EGMI,EJEN,CIFS,AJET,CCRQ,CAAC,ICAhB,ADAS,CCAT,ADAqB,EGMjB,ADRJ,CAAA,EFE0B,ICA1B,CAAA,CEMgB,AJET,CIFU,ADRjB,CAAA,CFES,ADQT,ECRqC,ECArC,CDAS,CGMO,AHNyB,CCAzC,ACFA,CCQ+C,EDR/C,AHU0B,CAA1B,EAA2B,EIFX,CHNyB,CGM8B,AFN9D,EDAgC,CEFhC,CFEmC,ICA5C,EAAsD,CCFtD,EAAyD;AJGhD,AKMT,AFNE,ADD8C,AED9C,AHUA,KDRA,CKMI,EFNE,ACFA,CCQC,EFNE,ACFA,AHUF,CIFG,CHPoC,CGOhD,AFNc,ACFA,CHUD,GERK,ADDkC,AEDlC,CDEC,ADDkC,AEDlC,IHUN,CERC,ACFA,AHUD,CERY,ACFA,GFCuB,CCCnB,ADDkC,AEDlC,CDEC,ACFA,AHUjB,CAAO,CCT4B,CCCvB,ADDuB,AEDvB,IHUhB,CER6B,ACFA,AHWlC,IETU,ACFA,AHWN,CETN,ACFA,OHWM,CAAA,SAAA,CAAU,EAAd,CAAiB,CAAC,CAAC,EAAnB,CADK,EAEL,CAAC,CAAC,KAFG,EAGL,CAAC,CAAC,OAAF,CAAU,GAAV,CAAc,UAAA,CAAA,EAAC;ADNlB,AKED,AFNE,ADFiE,AEAjE,AHYqB,EIJvB,CLRA,CGEE,ACFA,CFAO,CAAP,IGQM,CAAC,EJIc,CEVX,ACFA,CDEC,ACFA,EHYc,CIJ3B,CAAiB,MJIU,CAAA,CEVd,ACFA,ECQI,CAAA,EAAC,AJIS,CAAO,EAAX,CAAc,CAAd,CAAA;AIJD,AFNH,ADDlB,AEDkB,AHYoB,GCbvC,EDaI,CAHK,EAIL,GILkB,CJKd,CEXW,ACFA,CCQM,CAAC,CAAC,CAAC,EAAF,CAAK,AJKvB,CEXmB,ACFA,AHanB,CEXoB,ACFA,GCQH,CAAH,AFNK,ACFA,EDEO,ACFA,CCQM,AJKpC,CILkB,AJMhB,CAAC,CAAC,IEZ0B,ACFA,CDEA,ACFA,GHc5B,CAAW,EEZiB,CAAO,EAAP,ACFA,CDEU,ACFA,EAAV,CAAa,EHa3C,CEX8B,CAAiB,AFa7C,CAAC,CGf2B,AHe1B,CEb0B,ACFoB,CDE3B,CAAR,CCFe,CAAP,CAAR,EHeb,CAAW,OAAX,IAAsB,EAFxB,EAGE,CAAC,CAAC,QAAF,CAAW,KAAX,GAAmB,CAAC,CAAC,QAAF,CAAW,KAAX,CAAiB,GAAjB,CAAqB,UAAA,CAAA,EAAC;ADTxC,AKCkC,AFNe,ACFG,AHgBR,EDT5C,CKCP,EFNY,ACFA,EDE8C,ACFG,GJOtD,AGLK,ACFA,CJOL,AGLL,ACFA,EHgBiD,GDT5C,CCSgD,EDTvD,MCSuD,CAAA,IAAJ,CDTnD,ACS4D,CAAC,CAAC,IAAX,EAAiB,CAAC,CAAC,IAAnB,CAAA;ADRjD,AKCF,AFNC,ADAD,AEFC,AHe0E,ECb3E,CCHA,ACFA,EHkByB,CIPnB,AJOA,GAAyE,EDRtE,ACKL,CAJK,CAAP,CIAY,CLDD,EKCI,EHNjB,CAAA,GFKS,CAAa,CKCG,CLDhB,AKCiB,ELDA,CKCT,AHNjB,CFKS,AKCqB,AHN9B,EFK8B,EAArB,CAAP,GELF,EGM8B,CAAA,AHN9B,EGM+B,QHNtB,EAAT,EAAc;AFMb,AKAkC,AHLjC,ADcD,GDXM,ACCA,QIC+B,AHL7B,CGK8B,CAAC,EAAF,CAAK,AHL7B,KGKwB,GAAU,CHLvC,CAAe,EAAE,CGKY,AHLX,GGK0B,CAAC,CAAC,AHL9C,CAAP,IGKoC,GAAsB,KAAzB;AAA6B,AFJhE,ADAC,AEFD,EDEA,ACFA,CCMiB,AHNjB,EGMkE,IAAjD,CAAsD,IAAtD,CAAjB,OFJA,CAAA,ECFA,CAAA,MDEA,CAAA,ECFA,CAAA,IDEA,GAAA,ACFA,GAAA,SDEA,GCFA;AJOF,AKAE,AFJE,ACFA,AHgBF,EAAA,IIVM,GLAR,EGJW,ACFA,GCMK,CJUd,CEdc,ACFA,AHgBd,CDVF,AKAmB,QAAQ,AJUzB,CIV0B,AJU1B,GIViB,CAAa,GJU9B,GAAA,GEdS,CEIqB,AFJQ,CEIR,CDNrB,CCMsB,ADNU,GHgBjC,CEdC,EAAP,CCFO,EAAP,EHgBF,EAAgG;AD3BlG,AKiBqC,AFHlC,ADAD,AEFC,AHeD,CD3BF,CEcE,CFdF,AGYE,ACFA,KHiBA,GIVmC,EJUnC,GAAA,GCbA,CAAA,ADaA,EIV4C,CAAC,CAAC,EAAF,CAAK,EHHjD,CAAA,EGGmC,GAAmB,EHHtD,GAAA,UAAQ,EAAR,CGGmC,CHHtB,EGG2D,CAAC,CAAC,EAAF,CAAK,KAA1C,GAA+C,IAA/C;AAAkD,AHFnF,GGEe,EAAsE,IAAtE,CAA2E,CHFnF,GGEQ,CAAjB,CHFc,SAAL,CAAe,EAAE,CAAC,KAAlB,IAA2B,IAA3B,GAAkC,KAAzC;AFfS,AKkBX,AFFA,ADAC,AEFD,AHcE,EEZF,ACFA,CFAA,GGIM,CLlBK,CAAA,CC4BJ,MIVQ,CLlBJ,EKkBO,CLlBP,GGgBX,CAAA,ECFA,AHcE,CIVwB,ADJ1B,AHcwB,CD5Bb,AKkBgB,KFF3B,CEEkB,AFFlB,CEEkC,CDJlC,CAAA,AHcyB,GAAD,EEZxB,AFY8B,GIVI,AFFlC,ACFA,CCIkC,EAAC,ADJnC,IHcwB,EAAgB,CEZ/B,EAAT,CCFS,CDEa,CCFtB,EAAyB;ACIc,AFDrC,ACFA,AHcE,UAAG,CIXgC,AFD9B,ACFA,CCG+B,CAAC,AJWrC,EAAQ,CEZE,ACFA,GCGyB,IAAY,GAAG,CAAC,CAAC,CAAC,MAAF,CAAS,GFDvD,CAA6B,CECgB,CAAf,ADH9B,CAAgC,KDEhC,CAAsC,EAAtC,ACFA,CDEP,ACFgD,EAAzC,CAAP;AJIJ,AKDwE,AFArE,ADAD,AEFC,AHcK,ECZN,CGAkB,AFFlB,ACFA,CJKF,CKD0E,GLC1E,AKDoB,AJYZ,CIZsE,OJY9D,CAAC,EIZ6D,AHA5E,CGA4E,AHA5E,ADYc,EIZ+D,AJYzD,IAAN,EAAY,CCZ1B,CAAA,EDYc,CAAR,GCZN,GAAA,UAAO,MAAP,EAAgB;AFClB,AKDmF,AFEjF,ADDE,ADYI,QCZA,CAAC,EGD6E,CAAC,CAAC,CHC1E,CGDwE,CAAK,KAAL,AHC7E,CAAa,EGD0E,IHCpE,CAAC,EGDyD,AHC7E,CAAL,EGDoG,AHCtE,CGDuE,CAAC,MAAF,CAAS,KAA9B;ALCnF,AKDwH,AHElH,AEFJ,AHcK,EGdL,CCAkB,EAAsG,IAAtG,CAA2G,ELC/H,AECY,EGFQ,CAAlB,CHEc,KAAJ,CAAU,GEFpB,CAAA,SAAA,CAAA,SFEyC,MAAM,AEF/C,CFEgD,EAAP,AEFzC,CFEmD,KAAzC,CAAN,GEFY,MAAhB,EAAoC;AJEpC,AKAA,AHCG,AEHH,MCEM,EDFN,GJEA,EIFA,EJEA,AKAe,CLAM,AIFrB,ECEkB,ELAlB,AIFA,EJE4C,GKAnB,CLAzB,AKA0B,ELA8B,CKAtC,CAAY,UAAA,CAAA,EAAC;ALAV,AKAc,AJa/B,MAAA,GDbiB,EKAiB,AJa9B,CIb+B,AJa9B,CDbY,AKAmB,EAAF,CLAjB,AKAsB,ILAtB,CKAiB,GAAU,CJa5C,CAAmB,GIbe,GAAe,CAAC,CAAC,EJa/B,GIbc,AJaf,EAAM,CIb+B,MJarC,EAAa,MIbD;ALAS,AKA6B,AHEvE,AEHA,AHeI,GIdY,EAAyD,GDDnE,CJCoC,AKA1B,AHEX,CGFyE,EJcvE,CDdmC,CKA1B,CAAlB,AJcM,CDdsC,CCc9B,CCZZ,CAAe,CFF2B,GIDrB,EFGA,CAAC,AEHkB,EFGzB,AEHf,CFGyB,KAAzB,IAAkC,MAAlC;AFDD,AKAD,AHEE,ADYM,ICZN,EGFI,IJcE,CCZC,CAAC,GAAR,CAAY,EDYE,CAAC,CIdG,EJcJ,CIdO,CJcD,IAAN,EIdc,AJcF,CIdG,EHE7B,CGFqB,AJcP,CIdmB,AJc3B,UId2B,CAAA,EAAC;AAAI,AFGxC,ADAC,AEJC,AHgBM,EEZR,CDNA,KEEQ,GCCgC,WAAS,AFGjD,CEHkD,AFGlD,ACJuB,CCC4B,EAAF,ADDvB,CCC4B,KAAd,AFGxC,CAAA,EEH2D,ADDnD,SDIR,GAAA,GCJ0B,CAAC,ECCa,ADDd,EAAiB,CCCkC,CAAC,AFGlE,CEHmE,EAAF,CAAK,IFGlF,CEHwC,CFGN,EEHqD,IAA/C;ALCxC,AKD0F,AFIxF,ACJE,AHgBG,EDfP,CKDuB,EAAqE,CLC5F,AIDI,CJCJ,EKDuB,CAA0E,CFIxF,GEJc,CAAvB,CLCA,AGGc,CHHd,IIDmB,CAAC,GJCpB,AGGS,CAAe,ACJpB,CAAqB,CJCzB,CIDI,KDI4B,CAAC,KHHjC,AGGS,IAAiC,IAAjC,GAAwC,KAA/C;AHFA,AKDF,AFIC,ADDD,EAAA,CCDA,GEFM,KLCG,QEET,CAAA,CGHqB,GAAG,KHGxB,CAAA,CGH+B,CAAC,GAAR,CAAY,AHGpC,GAAA,OGHoC,CAAA,EAAC,AHG9B,MAAP,EAAgB;AFDZ,AKFqC,AHIvC,AEJE,AHgBE,MDdF,EEEE,ADYA,EDdE,AIFE,CCA+B,CLE/B,AKFgC,CAAC,AHIhC,GEJK,CJED,CCcC,CGhBG,AHgBF,CIhBwB,AHInC,CFHG,AKD0C,AHIhC,GGJsB,ADAlB,CCAgC,ADA/B,EFIC,CAAC,EAApB,CAAJ,ADYe,ECZc,AEJZ,CAAc,CCAsB,CAAA,ADApC,CAAf,CCAoD;ALGpD,AKHwD,AFM5D,ADDI,ADWmB,EEVvB,IHHI,IAAI,EAAE,AEEA,CGLqD,CAAC,CAAC,CHKnD,CFFC,AKHgD,AJgBxC,CIhB6C,GHK1D,CCCV,ADDoB,CGL2C,AFM/D,EFU+B,CIhB0C,AJgBzC,IAAD,EEV/B,AFUsC,CIhByB,AFM/D,GENiF,CAAC,CAAC,IJgBpD,CIhB6B,CJgBV,CEVlD,GAAA,EDD8C,CDWf,CAAR,ICX6B,CAAC,CCCxC,CDDiC,CAAU,KAA9C,CCCV,ADDI,ECC+B;AHL1B,AKDiF,AFM1F,ADAG,AELC,AHesD,KDfxD,AKDuC,EAAmD,CFM5F,CFUgB,CGfT,CCDkC,AJgBmB,CIhBqC,CFMjG,CFUgB,CAAV,CIhBmC,AFMzC,ACLa,CCD4B,ADC3B,GDKd,MCLI,EAAqB;AJIxB,AKLqG,ADEhG,AHeD,GDjBL,AKAwB,EAAgF,EJWpG,CGTE,CCFkB,CAAqF,IAArF,CAAxB,QDEqB,CAAC,MAAM,CAAC,MAAR,CAAf;ACDN,AFME,ADAA,AEJG,AHeF,KAZD,IILK,AHMA,CGNA,CFME,CAAC,KAAK,CDAb,CAAe,MAAM,CCAb,ADAc,CCAC,CDAR,CAAU,KAAzB,CCA+B,CAAC,EDAE,GCA1B,GDAR,ECA0C,EAAnC,EAAuC,GAAvC,CAA2C,UAAA,EAAA,EAAE,OEHtD,QAHO,GAGC,IAHD,GAIP,QAJO,GAIC,IAJD,GAKP,SALO,GAKE,IALF,GAMP,SANO,GAME,IANF,GAOP,cAPO,GAOO,IAPP,GAQP,eARO,GAQQ,MARR,EASL,IATK,EAAP;ALKF,AKKC,AFJ2D,ADCxD,AEJC,AHeF,CI5BH,EJcE,CCGE,CEVA,IJQJ,EEEW,CAAC,CFFZ,AGC4D,EDCxD,CAAY,ECDgD,CAAC,QAAL,CAAc,EAAd,CAAA,EDCxD;AFXJ,AGU6E,ADE1E,CFZH,EAAA,AEME,ECIS,CAAP;AEKJ,AFJG,ACHC,AHgBM,EAAA,CEfR,CEMI,IDPE,OAAO,AHgBL,CAAA,CITS,CDPD,ECOI,GDPC,EHgBb,CAAA,GITJ,EDPY,CAAc,MAAd,CAAd,GCOkB,AJSZ,CITa,EAAD,AJSpB,EIT+B,QJSN,QAAzB,EAAqF;ADxB1E,AKeyB,AHDpC,ADUA,ECVA,KFdW,CAAA,ACwBX,CIToC,EAAE,CLf3B,AKe4B,CAAD,AJStC,CIToC,CLfzB,CCwBX,EIT6C,CLflC,AEcX,CAAA,ADUA,CIToC,QHDpC,CAAA,MAAA,GAAA,UAAO,EAAP,EAAY;AFFd,AKGkD,AFFxC,ADEN,AENA,CCMJ,CFFU,EHDI,IIHP,GFMI,EFHX,EIHc,CFME,AEND,MDIL,ACJN,CDIM,CCJa,CFMZ,CAAe,EAAE,CAAC,GCFnB,CAAA,CDEC,CAAP,MCFM,GAAR,YAAA;AAAA,ADGC,AENG,AHeF,GCXF,KCDA,AFYK,KEZL,ACHW,AHeD,EGfN,CDGJ,IAAA,EFYK,GAAiB,CAApB,EAAuB;ADb3B,AKIA,ADLK,AHeC,CDdN,GKIM,OLJQ,CCcF,EIVI,GAAG,GLJnB,EAAuB,ACcjB,IIVA,UAAa,CAAC,EAAD,EAAW;ALH5B,AKGiC,AFF/B,ADGJ,ADUK,MDdH,GKGiC,AFF1B,ADGT,EGDqC,CLHnC,AKGoC,CAAD,CAAF,IAAS,AFFxC,GEE+B,AFFd,EAAjB,GDGJ;AFJE,AKG6C,AFD3C,ADpCJ,AEiCI,CCIJ,AHrCA,EAAA,CEiCI,KDGK,OAAL,GAAe,ACHA,CAAC,MDGhB,CAAuB,ACHA,CAAC,MAAT,CAAf,EDGuB,CAAA,EAAC;AHF1B,AGGI,ACHF,AHeA,MEZE,CAAC,CAAC,ACHA,AHeA,GAAG,GDfT,AIAY,AHeA,CEZR,CAAU,CCHqB,EAAjC,IDGE,CAAkB,EFYE,CAAC,OEZH,AFYV,CAAqB,KEZX,EAAM,QFYhB,CAAV;ADZA,AKEJ,AFDQ,ADtCK,AEmCT,ICIE,ADJF,GFnCS,CAAA,ICsCD,CHDR,AKEW,AFDF,GECgB,EFDZ,CHDb,AGCc,ACHC,CJGJ,AKCkB,ADJb,EJEhB,EAEW,CEvCF,EGuCoB,ADJ7B,CCI6B,AFDpB,ADtCA,AEmCe,CJExB,AGCwB,EHEb,IGFmB,CAAC,CHD/B,CIFwB,CJMb,AINa,ECIC,AFDhB,ACHgB,CDGrB,CECR,CFD2C,CDtC9B,EFqCT,EAI6B;AAHlB,AKEf,AFDU,ACHJ,AHcF,MGdE,EHcC,CIVE,AJUD,CIVE,AFDA,CHDK,AIFL,CAAC,AHcP,CDZW,CCYF,CEXC,CHDC,AGCA,CECf,CLFe,AKEG,GDJZ,CAAe,CAAC,CAAC,CDGb,CAAe,EECN,CDJb,ECIY,ADJY,CDGC,CECP,AFDQ,KAAtB,ACHJ,CAAgC,GDGG,CECvB,CFDR,CEC0B,IDJE,CAAA,ECIpB,ADJqB,ECII;ALD5B,AKEb,AFDO,ACJkC,AHerC,MIVE,AJUF,GAAG,EDZM,CCYH,GGf+B,CJG5B,ACYC,CAAC,EDZF,EIHkC,CAAC,EJGnC,CKEY,CDLgB,AHe/B,CGf2C,AHe5B,CIVG,AJUF,IIVM,ADLyB,CAAC,GHehC,CAAA,IGf2B,CAAc,CAAd,CAAZ,CAAA,CHef,CAAU,MAAV,CAAiB,GIVX,CAAA,AJUN,EAAD,EAA0B,GAA1B,CAA8B,UAAA,CAAA,EAAC,EIV5B,CAA4B,SAA5B,EAAuC,UAAvC,CAA5B;ALDa,AKEb,ADNsE,AHeV,MITtD,CDNF,IJIS,ICW+C,CAAC,CDXhD,ACWiD,GDXjD,EKES,GAAG,AJSmC,CDX/C,CCW+C,EIT/B,sBAAA,CAAA,oBAAJ,CAAyB,SAAzB,EAAoC,OAApC,CAAzB;ALDa,AGAP,ACJH,AHcqE,KGhBtE,EHgBuB,CEVnB,AFUI,CAAN,EDVS,EGAH,CAAC,KHAE,GAAA,CGAP,CAAe,MHAR,AGAc,CAAC,KAAtB,EAA6B,IAA7B,CAAkC,CAAC,CAAC,EAApC;AHEF,AKAJ,AFDK,ACJH,AHcE,IGdF,ECKI,AJSF,CEfA,GCCI,CJKC,AILA,IAAP,CAAY,CJKV,CKAc,AJSF,CAAC,CDTC,CKAG,ADLF,KJKK,ACSpB,CAAqB,EDTE,AILb,CCKR,ADLsB,IJKJ,GAAU,IAA9B,CKAiB,AJSjB,EAAsC,CITrB,ADLsB,CAAC,CHcxC,cGduD,CAAC,MAAhB,GAAyB,CAA1B,CAA7B,CAAZ;AJME,AKAF,AFDC,ACJD,AHcC,KEjBD,GEQM,GLAC,AILA,KCKO,CDLd,ECKiB,CLAf,AKAgB,CAAC,ELAA,CAAC,KAAK,KKAP,CLAhB,AKAe,CAAiB,KAAlC;AACA,AFDD,ACJA,GDNO,ACdR,KCyBQ,YAAY,GAAwC,EAA1D;ALAE,AKCF,AJQA,IAAA,IIRM,ELDD,CCSE,CDTA,ACSC,CDTA,EAAH,ACSL,CDTW,ACSC,CIRG,EJQf,CIRoD,ELD/C,AKCL,CLDE,EAAkB;AAChB,AKCJ,AFDF,ACJA,AHcE,EEVF,ACJA,MCKM,CJSC,IAAL,CDVU,ECUE,EDVE,AKCA,EJSE,CITqB,AJSpB,CEVnB,CHAY,AKCV,AFDF,CHAsB,CIJtB,CAAA,AHcc,CAAW,GAAX,EEVd,AFU8B,CEV9B,ECJA,AHcc,CGdd,AHckC,GEVlC,CHAY,CAAN,CGAN,GCJA,CHckC,CAAA,CGdlC,CHcmC,GEV5B,MAAP,ACJU,EDIoB,ICJ9B,EAA8B,EDI9B,EAAmD;AHC9C,AKCH,AFFF,ACJA,AHcuC,QIRjC,AFFN,ACJA,KDIA,ACJA,AHcuC,EIR1B,CFFb,ACJA,ECMgC,EFFhC,ACJA,ECME,IJQkD,CAAC,qBAAd,CAAoC,CAApC,CAAA;AAAsC,KAA/D,CAAZ;ADRE,AKCF,AFFA,ACJA,AHcA,IAAA,IIRG,AFFC,ACJA,CDIC,CHCA,CAAC,GGDI,AFUA,CAAC,CDTN,GILU,CJKA,CKCC,CAAC,ADNC,GJKE,CAAC,CCSV,GDTI,AKCC,CAAhB,ADNI,EJKwB,AKCA,IFFvB,CAA6B,CHCnB,GILG,CJKoB,AILnB,CJKjB,CGDG,CHCoC,AGDC,GCJxB,EAAqB,CDIS,CAAC,EAA5C,CAAL,EAAsD;AHElD,AKCF,AFFA,ACJA,AHae,MIPf,IDNI,EDIE,CEEC,AJOQ,CDRP,AILA,ECME,AFFA,CEEC,ADNA,CJKC,AILA,GCMG,AFFT,AFSiB,CETP,AFSQ,CDRhB,AILQ,CJKE,AILD,EHaM,EAAO,CIPf,CAAA,EDNH,CAAc,AHaQ,CDR1B,ACQ2B,CDRjC,GCQqB,CIPR,ADNH,AHaG,CIPU,ADNd,CAAX,CCMW,CAAiB,EFFS,MEE1B,AFFgC,CEEjC,AFFkC,CEE5C,CFFqC,CAAU,KAAzC,CAAN;AHEC,AKCF,AFFA,AFQyC,KIR1C,AJQU,EAAkC,GAAlC,CINH,AJMP,IINU,UAAU,CAAC,QAAD,CAAb,EAAyB;ALA/B,AKCC,ADPA,AHaH,GAbO,OIOE,ADPF,CAAC,KAAI,CCOI,ADPH,GCOqB,MDP1B,CAAe,MAAM,CAAC,ECOoB,CAAC,EDP3C,CAAL,EAAmC,GCOJ,CAA0B,IAAI,QAAA,CAAA,MAAA,CAAO,EAAX,CAAc,QAAd,CAA1B,CAA/B;AACA,AFHF,ACJI,MCOF,GFHG,IEGI,EDPE,CCOC,EFHZ,CAAe,ACJX,ICOe,CAAC,OAAlB,AFHF,CAA4B,MAA5B,EAAoC,UAAC,CAAD,EAAE;AHGtC,AKCE,AFHA,ACJC,AHaG,EAAA,EDPN,EKCE,ILDF,AGFM,CHEN,AGFE,EEGO,AFHA,CEGC,CJMJ,CAAA,IDPN,CAAA,AKCE,CAAgB,GJMZ,CAAA,GDPN,GAAA,AKCkB,CAAA,EAAC,IJMb,GAAR,EDPE,QCOoB,QAAtB,EAA+E;ADN3E,AKCE,AFHA,AFQN,QILM,AFHA,AFQN,KDNW,ACMX,GERc,AFQd,CERe,CAAD,CAAR,CFQN,IILsB,CAAC,YAAjB,CAA8B,CAA9B,EAAiC,OAAjC,CAAyC,UAAA,CAAA,EAAC;ALA1C,AKCE,AFHF,ACLF,MAAA,EJOE,EAAE,AKCA,CDRA,CJOE,AIPD,KJOM,EAAL,AKCO,CLDC,AKCA,CAAC,ADRf,CCQgB,ADRD,ECQD,CAAK,GLDb,AIPe,CAAC,CJMf,AKEM,CAAT,GAAwB,ADR5B,CCQI,CDRyB,OAA7B,CAAqC,UAAA,EAAA,EAAE;AJQrC,AKCC,AFHF,ACN0C,AHa7C,QDLI,ACKD,CINC,ILCK,ACKD,EDLG,AIRkC,KJQ7B,ECKb,GDPM,ACOW,CGboC,AHaxD,CGbyD,CHalC,CGbiC,CAAX,CAAgB,OAAhB,CAAwB,UAAA,CAAA,EAAC;AJSlE,AKCD,ADVuE,AHcxE,OIRA,CLGE,ICKI,EDLE,EAAE,CIT8D,IJSzD,AIT6D,CAAC,AHc7E,IGdwE,CJS9D,AITwE,CAAV,CAAA,CJShD,KAAK,MAAL,CAAY,QAAZ,EAAd,GAAuC,IAH1C;AAIL,AKCH,AFJC,ACPoF,AHerF,KIZM,CFIL,EHGE,CIVyC,CAAA,CCWtC,AFJD,CAAC,IHGK,EAAE,KAAK,QAAL,CAAc,GGH1B,CAA6B,IHGjB,EGHZ,CAAoC,MAApC;AHDO,AKMP,ADZqF,MCYrF,CLNA,AINA,ICYK,CAAC,OAAD,CAAL;ALAD,AKCC,AFLA,AFQF,KDXA,CGGE,EFQE,GAAG,CIHC,EFLE,AFQA,CERC,CEKC,GFLF,CAAR,CEKM,CAAU,IJGI,CAAC,EIHf,CAAN,IJGQ,CAAqB,YAArB,CAAV;AIFC,AFLA,ACRC,KDCF,QCDS,IAAP;AJaK,AGJR,ACRE,AHeD,GEnBF,CHgBS,CInBP,GHsBG,CAAC,CDHG,CAAA,CCGP,EAAS,CDHF,GAAP,YAAA;AACE,AKAF,AJGE,IIHF,EJGE,GAAG,EIHE,CAAC,AJGA,CDHC,GCGP,CDHW,EKAb,CAAgB,GLAP,CACL,EAAE,CAAC,GKDS,CAAA,ELCZ,AKDa,CLCH,CAAV,CADK,EAEL,MAFK,EAGL,IAHK,EAIL,QAAQ,CAAC,KAAT,EAJK,CAAP;AAMD,AKLC,AFJJ,ACRE,AHeE,EEPJ,GHES,CCKL,IIHI,CDZC,OHeO,CAAC,GEPjB,ACRoB,CDQpB,ACRqB,ECYE,CJGnB,CAAqB,CIHC,CDZN,CAAlB,EDQF,CAAA,MAAA,AFOI,EAAmC,CEPvC,EFOI,GIHyC,CAAC,IFJvC,KEImB,CAA8B,AFJxD,CEI0B,CAAtB,AFJ0B,QAA9B,EAAmD;AEK/C,AFLJ,ACPC,AHeE,GG1BH,GCuBI,EFLJ,KAAA,GAAA,IAAA,CEKmB,CAAC,OAAhB,CAAwB,UAAA,CAAA,EAAC;ALK7B,AKJM,QAAA,GLIN,MAAA,GKJkB,CAAC,CAAC,CAAC,EAAF,CAAK,KAAN,CAAZ,GAA2B,CAA3B;ALhCN,AKiCM,AFNJ,ACNM,AHcN,EGdM,CJrBR,CCmCE,CDnCF,GKiCM,AFNA,GFQG,CAAC,CERC,EFQT,CAAY,GAAZ,KIFoB,CAAC,ADZf,CAAA,SAAA,CDMF,ACNE,CCYF,AFN6B,CEMC,CAAC,CAAC,EAAhC,EAAoC,AFNpC,ACNE,CDMmC,ECN3C,ICYM,AFN2C,CEMC,AFNA,EAA5C,CAAJ,EAAqD,ECNvD,GCYkD,CAAA,EAAC;AAC3C,AFNJ,ACPJ,AHgBE,QGhBF,CHgBO,CIHC,EFNE,CCPV,GDOc,ACPd,AHgBE,GIHe,AJGA,CIHC,ADblB,CCamB,AFNT,CEMU,AFNA,CFSC,CIHH,AJGI,CIHC,IJGN,CIHA,AJGW,CIHpB,EJGS,CIHe,CAAxB,AJGyB,GAAhB,CAAoB,UAAA,CETS,AFST,EAAC,IETc,CAAC,EAAP,CAAU,KAA9C,CAAN;AH5BS,AKmCN,AFNJ,AFQuC,EDrC7B,OKiCP,ELjCO,CAAA,CCqC6B,KDrC7B,GAAM,KCqCoC,CDrC1C,ACqC2C,kBAAd,CAAiC,CAAjC,CAAA;AIDrC,ADdH,AHe2E,KAA5D,CAAf,CINE,EDTG,SAAL,GAAiB,EAAjB;AJeF,AKAI,AFPF,ACPA,AHgBA,IAAA,EDFF,AKAI,ELAJ,CGPO,ACPA,KHgBK,CAAC,CGhBX,EDOA,CAAe,ACPA,MCcM,ADdrB,CCcsB,ADdA,CHgBX,IETX,CAA4B,ICPN,CAAA,CDOtB,CCPuB,CDOa,CEOlC,CAAoC,CAApC,EAAuC,KFPJ,CAAD,CEOlC,CAA+C,AFPX,UEOW,CAAA,EAAC;ALApD,AKAwD,AFNpD,ACRyB,AHgBV,UERX,CAAJ,EAAO,ACRkB,AHgBV,CGhBW,CCc0B,ADdzB,MAAF,AHgBF,CAAC,IAAD,CIFyC,CAAC,AJEnC,CIFoC,CAAC,EAAF,CAAK,AJEpC,CAAC,IIF6B,CAAZ,EJE7B,CIFwD,AJEhE,CIFqC;ALAxD,AKAoF,AFL9E,ACT+B,AHgBU,KGhB7C,AHgBU,EIFR,ADdmC,AHgBU,CEP3C,EFOM,CAAV,GDFF,AIdE,CAA6C,CDSjC,CAAC,CAAD,CAAR,MCTyC,CAAA,EAAC;AJgB9C,AKDC,AFLG,ACTF,AHgBH,GAdO,EIGN,KDLM,CAAC,EJeP,EAAA,CACW,AIhBA,CAAC,IJeZ,EACwB,GIhBjB,CAAe,CAAC,CAAC,MAAF,CAAS,KAAxB,CAAL,EAAqC;AJgB5B,AKDX,AFLG,ACTC,QCcA,ADdA,GJeO,EIfH,CAAC,CCcE,CLCA,EKDG,CLCH,IIfP,CJeO,AIfQ,CAAC,CCcE,ADdD,CCcE,KDdJ,CAAS,KAAxB,ECcU,CAAuB,CDdA,EAAjC,KCcU,CAAd;ALDQ,AKER,ADdG,AHgBL,EAAA,MIFM,GLFI,CKEA,GAAG,AJEb,CAAA,CDJU,GAAS,IKEG,CAAC,AJEvB,CAAA,KIF6B,CAAC,ELFpB,IKEa,CAAc,EJErC,GAAA,OIFuB,CAAD,EAA8B,AJEpC,MIF0C,AJE1D,CIF2D,CJEjB,KIFU,CAAc,EJElE,EAAiE,KIFb,CAA9B,CAApB;ALCG,AKAH,AFNE,AFQF,IIFA,EFNE,GFQE,EIFG,AFND,CEME,AFND,CFQC,CAAC,CIFT,CAAY,CJEA,CAAZ,EIFA,AJEe,CAAC,GAAG,KAAK,IAAL,CAAU,CER3B,CAA6B,IFQ/B,EERE,AFQmC,CERC,AFQA,EAAtC,EAA0C,EERxC;AEOF,ADfE,AHiBA,IIFF,EDfE,IHiBG,CIFE,ADfD,CCeE,ADfD,GHiBG,IAAL,CAAU,CGjBb,AHiBG,CIFL,ADfiB,CCeE,ADfD,AHiBA,CGjBC,CHiBd,CAAgB,GIFrB,CAA0B,ADfT,CAAS,AHiBrB,IAAyB,CGjB5B,EAA+B,ECejC,CJEoC,CIFE,ADfpC,AHiBmC,CGjBC,CAAC,AHiBT,CGjBU,AHiBA,CIFxC,CDfE,CCe0C,EJE1C,EAA6C,MIFF,GAAD,EAAI;ALAzC,AKA8C,AFNnD,ACRD,AHiBG,IDHG,CInBP,CJmBO,AGNL,CHMK,IGND,CAAC,CHMA,AKA8C,AJG5C,GDHT,CCGI,CAAU,CAAV,CIHwD,AFN1D,CEM2D,EJG1C,GDHL,GAAd,ACGI,CIHiD,CLA5B,EKAgD,GAApB;ALCnD,AKD0E,ADb7E,AHiBK,GGzBE,ECqBN,QLCS,ACGA,IDHI,EAAJ,CAAO,MAAM,ACGlB,GDHK,CAAP;AACD,AKDF,AFNG,AFUE,GItCN,ELiCS,CGLL,EFUE,MEVM,CAAC,GFUG,CEVJ,AFUK,CEVb,WFUa;AETd,ACPH,AHgBuB,EGhBvB,GDDE,YFiBqB,QGhBvB,AHgB+B,CGhB/B,AHgBgC,IAAD,CAAR,IGhBvB,CAAA,MAAA,GAAA,UAAO,MAAP,EAAiC,QAAjC,EAAsD;AJepD,AKFF,AFLC,ACRD,AHgBqC,EIHrC,CFlBA,CHoBE,EAAA,CAAA,CIfF,CHgBgB,EAAuB,EGhBvC,CCaY,AJGI,CAAV,CDDJ,AIfF,CJeE,GIfF,KJeE,GAAA,YAAA;AACE,AKDJ,AJEM,EIFN,MAAM,CAAC,ILCI,KAAK,KAAZ,MKDE,EAAuB,YAAA;ALE1B,AKDD,AFNF,ACTE,AHiBG,EERL,EEME,CLDA,GIdG,CAAC,KAAK,ECeG,MFNd,CAAA,SAAA,CAAA,MAAA,CCTM,CAAgC,CDStC,MCTM,CAAwC,GDSvC,EAAP,CCToD,CDS9B,ACT+B,EAA/C,CAAJ,EAAwD,GDS1D,EAA2C;AEO1C,AFPD,ACRI,AHiBD,GIJG,CAAN,EDbI,EDQJ,KAAA,CCRY,CAAC,CDQb,GCRiB,CDQjB,ICRa,CAAU,uBAAuB,MAAM,CAAC,EAAP,CAAU,KAA3C,CAAD,CAAR;AJiBF,AIhBI,IJgBJ,EAAA,CAAA,SAAA,CAAA,EAAA,GAAA,UAAG,KAAH,EAAY;AAEV,AKFJ,AFRE,ACPC,AHgBD,IAAA,EIDI,EFRA,CAAC,IHUI,CGVC,AFSA,CAAC,GDCG,IAAI,KAAK,ACDZ,EIDgB,GLET,AKF4B,KLEb,AGV5B,CAA6B,GEQ9B,CLEkC,CAAC,EGVlC,CAAqC,EHUxC,AGVG,CAAL,EAA+C,aEQD,GAAA;ALG7C,AKFD,AFRE,AFQe,KDDjB,GKCI,IAAI,AFRA,CFQS,EIAN,CAAC,AFRA,CEQC,IFRL,AFQiB,CERP,AFQQ,IAAI,KAAJ,CAAU,EIAxB,CAAD,CAAqB,KAAhC,IFRuC,EAAE,CAAC,KAAlC,CAAN,CFQuD,MAAM,CAAC,EAAP,CAAU,KAAzC,CAAD,CAAR;AEPhB,ACRD,AHe4E,KAAlE,EAAoE,EGfzE,CHeK,CAAV,OGfA,CAAe,eAAf,CAA+B,MAA/B,EAAuC,UAAC,CAAD,EAAE;AJkB3C,AKFE,ADfE,AHeH,GAVD,KIUK,EDfG,CJiBR,AIjBI,CCeK,CLET,AKFU,ADfC,ICeN,GAAY,CAAZ,KAAkB,GAArB,EAA0B;ALf5B,AKgBI,AFRF,ACPI,GJDN,EAAA,GICM,CDOC,IEQI,GDfG,CCeC,ADfA,CDOb,ACPY,CDOG,ACPX,MCeS,CAAA,KFRb,CAA4B,EEQnB,AFRT,CEQsB,CFRU,GEQvB,EAAmB,EAAnB,EAAuB,CFRA,CEQvB,AFRuB,CEQ9B,CFR+B;AEShC,AFRC,ACPE,AHeN,EAAA,QERQ,CAAJ,EAAO,EFQX,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,MAAb,EAAoC,QAApC,EAA2D;ADjB9C,AGUP,ACPD,AHeH,EDlBW,MGUP,CFQA,EDlBO,CAAA,CCkBH,CDlBG,ACkBF,EERG,CHVC,AGUA,AFQD,CERA,AFQZ,CDlBW,AGUP,CFQW,CAAC,GAAG,KAAK,OAAL,CAAa,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;ADEhD,AKFG,AFPI,AFQF,CDzDN,EAAc,KKwDJ,EJCD,CIDI,CLxDU,EKwDP,CLxDF,ACyDA,ODzDA,ACyDL,CDzDK,AKwDW,AJCH,CIDI,AJCjB,EAAgB,EIDA,AJChB,CIDL,AJCwB,GDzDd,ECyDL,GDzDK,CCyDuB,MDzDvB,ACyD6B,CDzD7B,ACyD8B,EAAP,CAAU,KAAzC,CDzDQ,CCyDwC,EDzD/B,EAAT,CAAd;AKyDI,AFPG,ACRD,AHgBE,IIDJ,EDfE,KCeK,ADfD,CCeE,ADfD,CHgBE,EIDT,CAAY,GAAZ,CJCI,CAAa,CAAb,IAAkB,MAAlB,MGhBF,CAAgC,MAAhC,CAAuC,MAAvC;AJkBN,AKFI,AJCI,IDCM,MAAd,CKFW,EJCE,EIDE,QAAA,AJCP,CIDO,QAAJ,CACL,GAAG,CAAC,IAAD,CAAH,IAAa,EADR,EAEL,GAAG,CAAC,IAAD,CAAH,GAAY,GAAG,CAAC,IAAD,CAAH,CAAU,KAAV,CAAgB,GAAhB,EAAqB,GAArB,CAAyB,UAAA,CAAA,EAAC;AAAI,AFT1C,ACRA,AHiBE,METF,ACRA,EHiBE,GETE,ACRA,CDQC,ACRA,CCiBqC,CAAC,CAAC,GJAhC,CIA8B,AJA7B,CGjBb,CCiB0C,UJA7B,IETb,CAA6B,MAA7B,CAAoC,EAApC;AHSN,AKAwD,AJA/B,CDAzB,IKAkB,CAAZ,GAAsD,ELA9C,AKFH,EAGL,GAAG,CLDT,AKCU,AJDe,EDAL,GKCX,CAAH,EJD2B,CICd,AJDe,GICZ,CAAC,AJDU,CAAR,IICH,CAAH,CAAW,GAAX,CAAe,UAAA,CAAA,EAAC;ALAjC,AKAqC,AFTjC,ACRA,AHgBiC,MDCrC,AGTI,ACRA,GHgBY,EERR,AFQ+B,CDCvC,AGTS,CES4B,CDjBzB,AHgBI,CGhBH,AHgBP,EICmC,EDjB7B,CDQR,ACRA,KCiBqC,CAAA,IAAJ,CAAS,CAAC,CAAC,IAAX,EAAiB,CAAC,CAAC,IAAnB,CAAA;ALArC,AKA6D,ADhB1D,AHgBG,KIAW,ADxBf,CCwBE,GAA6D,EAHxD,CAAP;ALGF,AKEC,AFVG,ACPH,AHgBI,GIXL,ADnBA,GDqBI,QHQJ,AGRY,CAAC,IAAD,CAAR;AHSF,AGRC,AFSA,KEjBD,QHgBA,MAAA,CACW,EADX,EAEW,KAFX,EAGW,OAHX,EAIW,QAJX,EAI6B;AAHlB,AKEb,AFVC,ACPD,EAAA,CDNA,GEuBM,KLFO,EAAA,GAAA,EAAA,OIfb,CAAA,CCiB2B,GAAG,KDjB9B,CAAA,GCiBM,GDjBN,GAAA,UAAO,KCiBuB,CAAC,ADjB/B,EAAiC,MCiBH,EAAmB,ADjBjD,EAAsD;AJgBzC,AKEX,ADlBF,AHgBE,IIEA,AJFA,CIEC,CAAC,EDlBJ,GJgBa,EIhBb,CHgBY,CAAC,CDAA,AIhBb,GJgBa,CIhBb,GCkBG,CLFU,AKEX,CAAqB,EJFV,GIEX,GAA6B,CAC3B,aAAa,QAAQ,CAAC,WADK,EAE3B,EAF2B,EAG3B,WAAW,QAAQ,CAAC,OAAT,CAAiB,IAAjB,CAAsB,IAAtB,CAHgB,EAI3B,cAAc,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,UAAA,CAAA,EAAC;ALLzB,AKK6B,AFd5C,AFQqB,SERrB,EHSe,EKK6B,AJNvB,KDCN,GAAA,AKKmC,AJNrB,CIMsB,AJNrB,CIMsB,GJNlB,CIMU,CLL7B,CGTf,CEcwD,CJN1B,CAAU,EIMI,GAAiB,CAAC,CAAC,IAAnB,GAAuB,GAAvB,MJNiB,MAAM,CAAC,EAAP,CAAU,KAAzC,CAAD,CAAR;ADEN,AKIuD,AFvGtE,ACkFI,AHe4E,CEjGhF,EAAA,EEuGoB,AJNN,CIEmB,CJFiD,CIO5E,ADtBC,EHeO,CDEC,ACFX,CIE6B,CAKtB,ADtBC,ICiBqB,CAA7B,CLAW,GAAA,QAAA,SIjBR,CAAgC,OAAhC,CAAwC,MAAM,CAAC,EAA/C,CAAH,EAAuD;ACuBxD,ADtBG,AHeH,GIAD,AJVA,GGLI,QAAQ,CAAC,IAAI,KAAJ,CAAU,4BAA4B,MAAM,CAAC,EAAP,CAAU,KAAhD,CAAD,CAAR;AJkBA,AGrGO,ACoFL,ODpFK,CAAA,EHqGJ,CAAC,KAAD,IAAU,KAAK,CAAC,EGrGZ,EHqGM,CGrGN,EHqGmB,MAAb,IAAuB,CAApC,EAAuC,KGrGhC;AHsGL,AKMN,ADvBG,AHeH,EAAA,IIQM,QLNM,CCFZ,CAAA,EDEgB,CKMG,GAAG,CLNV,CAAU,CCFtB,CAAA,KIQM,GLNM,CAAN,MCFN,GIQsB,AJRtB,GIQsB,OJRN,MAAhB,EAA0C,QAA1C,EAAuE;ADGlE,AKMH,AJRA,QIQG,CJRE,IAAL,CAAU,IAAV,CAAe,EIQC,CAAC,CAAC,CAAC,CJRnB,UIQkB,CAAD,CAAe,KAAhB,CAAhB,EAAwC;ALLvC,AKMC,ADxBF,AHgBA,SGhBK,AHgBA,CIQG,EAAE,GAAG,GDxBb,CCwBiB,ADxBF,GHgBf,KIQiB,CAAA,MDxBjB,CAA+B,ECwBd,CAAU,EAAd,CAAiB,ADxB9B,CCwB+B,CAAC,ADxBO,UAAC,CCwBT,ADxBQ,CCwBT,CAAe,ADxBJ,KCwB5B,CAAX;AACA,ADxBA,AHgBF,IAAA,MIQQ,ADxBF,CAAJ,EAAO,CHgBC,CAAC,IIQM,GAAG,KJRT,cIQ4B,CAAC,QAApB,CAA6B,EAA7B,CAAlB;ALNF,AKOE,ADxBE,AHea,IDEjB,EKOE,EDxBE,EJiBJ,CAAA,EKOS,AJTQ,CISP,EDxBE,CCwBV,ADxBW,CCwBC,ADxBF,CAAR,CJiBJ,CAAA,ACFyB,CAAC,IAAD,CISvB,AJTe,EDEjB,GAAA,YAAA;AACE,AKOA,ADxBE,AHc2B,KAArB,CIUR,CAAC,AJV8B,CIU7B,EJVM,CAAV,EDGS,IKON,CAAD,CAAa,SAAb,GAAyB,SAAS,CAAC,EAAV,CAAa,KAAtC;ALNE,AKOF,ADxBC,AHcJ,GAJD,GIcI,CAAC,CLPC,AKOA,ELPE,EAAE,KAAK,EAAL,CAAQ,CKOb,CAAD,CAAiB,KLPX,AKON,ELRO,CKQkB,SAAS,CAAC,KAAnC;ALNE,AKOF,MAAA,CAAC,CLPC,AKOA,KLPK,EAAE,KAAK,GKOb,CAAD,CLTO,AKSY,KAAnB,GAA2B,SAAS,CAAC,MAAV,CAAiB,KAA5C;ALNE,AKOF,ADzBA,AHeJ,EAAA,IIUI,ADzBA,EJkBE,GIlBE,CAAC,GJkBI,ACHb,CAAA,CDGe,KAAK,GCHpB,CAAA,CIUyB,CAAC,CLPX,CAAa,GAAb,CAAiB,GKOG,CAAC,ADzBhC,AHeJ,CGfoC,EHepC,GDGgC,CAAA,AIlB5B,CCyBqB,ADzBkB,CJkBV,AKO7B,IJVS,CGfT,KHeJ,EAAoC,QAApC,EAAiE;ADG5B,AKQjC,AJVF,MIUE,CAAC,CAAC,CJVC,OAAL,CDEmC,AKQhC,AJVU,CDEuB,AKQlC,CLRmC,AKQtB,EJVf,CAAkB,KDEiB,CKQjC,AJVF,CDEmC,EKQR,SAAS,CAAC,QAAV,CAAmB,KAAnB,CAAyB,GAAzB,CAA6B,UAAA,CAAA,EAAC;ALRV,AKQc,ADzB3D,AHgBF,MGhBE,GJiBW,ACDR,CDFI,CIdH,CAAC,GCyBsD,IJT7D,CGhBE,cCyB2E,CAAC,CAAC,IAAlB,GAAsB,uBAAtB,GAA2C,CAAC,CAAC,IAA7C,GAAiD,WAAjD;ALPzD,AKOqH,AJRzH,IAAA,GIQ2B,CLPvB,CKOuH,IAAhG,CAAqG,AJRtH,CAAC,CDCC,EAAE,AKOa,CAAzB,ILPiB,ICDR,IDCG,CAAc,QAAd;AAJL,AKYR,ADzBC,AHgBe,KIAjB,CDhBE,CJaA,IKYK,EJTU,CGhBP,CCyBA,ADzBC,IAAD,CAAR,CHgBuB,CAAC,GISN,CAAC,AJTI,CISH,AJTL,CISM,WAAD,CAAD,CAAe,KAAhB,CAAb,EAAqC;ALN3C,AKOC,ADzBD,AHe8B,KDJ/B,AInBA,AHuBU,EAAuB,GIUzB,AJVE,CAAV,CIUU,GAAG,IAAI,QAAA,CAAA,MAAA,CAAO,EAAX,CAAc,CAAC,CAAC,WAAD,CAAD,CAAe,KAA7B,CAAX;AACA,ADzBH,AHeA,GG7BD,AHyBA,OIcU,MAAM,GAAG,gBAAgB,CAAC,QAAjB,CAA0B,EAA1B,CAAf;ALPJ,AKQI,MAAA,KLRJ,EKQW,CAAC,GLRZ,AKQI,CAAY,MAAZ;AL3BJ,AK4BI,ADzBJ,AHeA,EGfA,AHeA,CDlBA,EAAA,CK4BI,CAAC,CAAC,OJVN,CAAA,CIUK,CAAD,CAAa,MDzBjB,AHeA,CGfA,AHeA,EIUI,GAAyB,IDzB7B,CAAA,CCyBmC,CAAC,EAAP,CAAU,AJVvC,CGfA,EHeA,CGfA,CCyBI,QJVY,CGfT,CHeP,CGfA,CHekC,CGfT,OHezB,CGfA,CHe+D,CGfjB;AC0B1C,AD1BJ,AHgBE,MIUE,CAAC,CAAC,AD1BN,CHgBO,IGhBP,AHgBE,GGhBF,AHgBc,IGhBd,CC0BK,AJVc,CIUf,CAAiB,EJVP,CAAU,EIUpB,GAAyB,CJVf,CAAiB,IIUI,CAAC,KAAhC,AJV2B,CAAA,EAAC;ADnBnB,AK8BT,AJXgC,EDnBvB,IK8BT,CAAC,CL9BQ,AK8BP,CL9BO,ICmBuB,CAAC,CDnBxB,ACmByB,CAAC,EDnBpB,ACmBkB,CAAK,EAAL,CAAQ,CIWxC,CL9BQ,AK8BT,AJXiC,CIWd,AJXa,KIWhC,GAA2B,MAAM,CAAC,OAAP,CAAe,GAAf,CAAmB,UAAA,CAAA,EAAC;AAAI,AD1BrD,AHe8C,KAAlC,CAAZ,EGfI,KAAK,EC0B4C,CAAC,CAAC,KAAF,AD1BjD,CAAe,EAAE,CAAC,KAAlB,CAAJ,EAA8B;AJgBhC,AKU8D,ADzB1D,AHeF,MDAF,AIfI,CCyB2B,CLV/B,AKUI,CJVG,KGfK,CAAC,IAAI,GHef,EGfW,CAAU,yBAAV,CAAD,CAAR;AJeJ,AKWI,ADzBD,AHeD,IAAA,EIUE,QJVQ,CAAC,YIUY,AJVZ,CIUa,MAAM,CAAC,QAAR,CAArB;ALXJ,AKYI,AJXe,MIWf,CAAC,CAAC,KJXa,CDDnB,GKYK,CAAD,CAAa,EJXU,CAAC,IAAD,CAAR,CIWf,GAAyB,MAAM,CAAC,QAAP,CAAgB,KAAhB,CAAsB,GAAtB,CAA0B,UAAA,CAAA,EAAC;ALXtD,AKW0D,ADzB1D,AHc+B,KAArB,EAAuB,CGd9B,CAAC,CHcM,CAAV,EDAA,CIdS,CJcT,AKW0D,CLV/C,KADX,EACwB,WKUkD,CAAC,CAAC,IAAlB,ADzBtD,CAAgC,ECyB4C,KDzB5E,CAAwC,EAAxC,CAAJ,EAAiD,YCyBS,GAA2C,CAAC,CAAC,IAA7C,GAAiD,WAAjD;ALV/C,AKU2G,ADxBpH,AHcH,GAJD,GGVI,CCwByB,EAA6F,ELV7G,EKUgB,CAAkG,ADxBnH,CAAC,CJcA,EKUgB,CLVhB,AKUT,ADxBa,KJcJ,AIdA,CAAU,uBAAuB,EAAE,CAAC,KAApC,CAAD,CAAR;AJeC,AKUF,ADxBG,KCeG,MASA;AACL,ADxBD,AHcH,EAAA,IIUI,KAAK,CAAC,GJVV,CAAA,GIUS,CAAL,KJVJ,CAAA,YAAA,GAAA,UAAa,EAAb,EAA4B,QAA5B,EAAyD;ADAhD,AKWL,AJVF,IDDO,EAAA,CAAA,ECCF,GIUG,CLXD,GAAP,AKWY,AJVZ,GAAe,EIUP,CAAU,EJVE,EDDN,GAAd,AKWQ,CAAN,CLXuB,ACCV,CAAa,MAAb,CAAoB,UAAA,CAAA,EAAC;ADAlC,AKWD,ADxBD,AHawC,SGbnC,IJaI,ACA+B,CAAC,CAAC,CAAC,CDA9B,CIbb,AHayC,CDAhC,AIbM,AHa+B,CDA9B,CCAyB,CAAQ,EAAR,CAAD,CDAlB,GAAb,CAAP,IIbF,CAA+B,EAA/B,EAAmC,UAAA,CAAA,EAAC;AJcnC,AKWF,ADxBG,AHYkD,GIXtD,ELUS,ACCQ,CAAf,IGZM,CAAJ,EAAO;AACL,AHYJ,QGZI,CHYC,OGZO,CAAC,CAAD,CAAR,AHYJ;ADEA,AKWF,ADxBM,AHYJ,EIYF,ELXE,ACDA,EDCA,CAAA,CKWI,CAAC,KJZK,CAAC,CDCX,CAAA,QAAA,ECDW,CDCX,GKWI,EAAyB,OLX7B,MKWI,CAAN;ALVI,AKYJ,ADzBK,AHWc,EIcnB,MAAM,CAAC,ILZI,ACFQ,KDEH,GCFW,CAAC,CDExB,GCFuB,CIcrB,AJda,EIcQ,YAAA;ALXxB,AKYD,AJf+B,IIe/B,CLdA,AKcC,AJfS,CIeR,CJf+B,GAAvB,CAAV,UIeC,CAAD,CAAmB,KAAnB,GAA2B,CAAC,CAAC,SAAD,CAAD,CAAa,SAAxC;AAEA,AD3BE,AHWH,GAJD,CIoBE,CAAC,CAAC,AD3BA,KAAI,CAAC,GC2BN,CAAD,CAAa,SAAb,GAAyB,EAAzB,OD3BE,CAAgC,MAAhC,CAAuC,EAAvC;AJeF,AKaA,ILbA,AKaA,CAAC,CLbD,AKaE,CLbF,SAAA,CAAA,EAAA,AKaC,CAAD,CAAiB,CLbjB,IKaA,GAAyB,EAAzB,CLbG,KAAH,EAAY;AACV,AKaF,AD5BE,AHYI,EAAA,EIgBN,ED5BE,KAAI,CAAC,CJeE,ECHH,CAAA,EDGQ,EIfZ,EJegB,GKaG,AJhBf,CIgBgB,AJhBhB,CDGiB,KAAL,EKaI,CAAA,ELbW,ECH3B,GDGgC,ACHxC,CDGyC,AKajB,CAAS,ILb7B,CKaoB,EAAD,CAArB,EJhBF;ADIG,AKaF,AJhBC,GIUI,CAAN,CLTE,GCDM,GAAG,GAAG,IAAI,CAAC,SAAL,CAAe,KAAK,IAAL,CAAU,GAAV,CAAc,UAAA,CAAA,EAAC;AIkB5C,AD9BI,AHY4C,EIkBhD,ID9BI,EC8BE,CAAC,IJlByC,CGZpC,AHYqC,CGZpC,AHYqC,IGZtC,CAAR,EC8BE,CJlB0C,CIkB1B,CJlB0B,WIkB1B;ALdtB,AKeE,AD9BC,AHWyD,KGnB1D,AHmB2B,CAAf,CAAZ,CImBG,CAAC,CAAC,CLfP,EAAA,MKeM,CAAD,CAAa,SAAb,CAAuB,IAAvB,GAA8B,MAA9B,IAAwC,CAA3C,EAA8C;AL9BhD,AK+BI,AD9BH,AHWC,GDZF,AIjBA,CH6BE,CDZF,CK+BI,KAAK,AJnBA,CImBC,AJnBA,GAAR,CAAY,GAAZ,UImBO,CAAL;AACA,AJnBF,IAAA,QImBQ,IAAI,AJnBA,CAAC,IImBL,CAAU,EJnBlB,CAAqB,cImBb,CAAN,AJnBF,EAAsC,GAAtC;ADbW,AKiCV,AD/BL,AHYG,EDdY,CCUL,KDVK,CAAA,AIEf,EJFe,GAAE,EAAF,gBIEf;AJgBC,AItID,CJ+FA,AI/FA,EJ+Fc,AI/Fd,MJ+FoB,GAAN,OAAA,CAAA,MAAA,KAAA,OAAA,CAAA,MAAA,GAAM,EAAN,CAAd;AKuDI,AJlBM,EAAA,MIkBA,OJlBA,CAAA,OIkBe,EJlBf,CIkBkB,AJlBlB,SIkBA,CJlBA,GAA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","file":"htmlmain.js","sourceRoot":"../../../src","sourcesContent":["\nexport interface StringValueObject {\n  readonly value: string;\n}\n\nexport interface EntityIf<T extends StringValueObject> {\n  readonly id: T;\n}\n\nexport class MetaData {\n  constructor(\n    readonly description: string,\n    readonly members: string[],\n    readonly links: Link[]\n  ) {}\n\n  toObject(): any {\n    return {\n      description: this.description,\n      members: this.members,\n      links: this.links.map(v => v.toObject())\n    }\n  }\n  static empty(): MetaData {\n    return new MetaData('', [], [])\n  }\n}\n\nexport class Link {\n  constructor(readonly name: string, readonly path: string) {\n  }\n  toObject(): any {\n    return {\n      name: this.name,\n      path: this.path\n    }\n  }\n}\n\n\nexport module Objective {\n  export class Entity implements EntityIf<Id> {\n    isRoot: boolean;\n    isNotRoot: boolean;\n    constructor(\n      readonly id: Id,\n      readonly title: string,\n      readonly parent: Id,\n      readonly metaData: MetaData\n    ) {\n      this.isRoot = parent ? false: true;\n      this.isNotRoot = !this.isRoot;\n      if(id.eq(parent)) {\n        throw new Error('IDとparentが同一です');\n      }\n      if(!title || title.trim().length == 0) {\n        throw new Error('タイトルが空です');\n      }\n    }\n\n    toObject() {\n      return {\n        id: this.id.toObject(),\n        title: this.title,\n        parent: this.parent ? this.parent.toObject() : null,\n        metaData: this.metaData.toObject()\n      }\n    }\n\n    static root(): Entity {\n      return new Entity(\n        Id.create(0),\n        'root',\n        null,\n        MetaData.empty()\n      );\n    }\n  }\n  export class Id implements StringValueObject {\n    private _class = 'Objective.Id'\n    constructor(\n      readonly value: string\n    ){}\n    static create(num: number): Id {\n      return new Id('O' + num);\n    }\n\n    toObject(): any {\n      return this.value\n    }\n\n    eq(other: Id): boolean {\n      \n      return other && this.value === other.value\n    }\n  }\n  \n  \n}\n\nexport module Action {\n  export class Entity implements EntityIf<Id> {\n    constructor(\n      readonly id: Id,\n      readonly title: string,\n      readonly parents: Objective.Id[],\n      readonly metaData: MetaData\n    ) {\n      if(!title || title.trim().length == 0) {\n        throw new Error('タイトルが空です');\n      }\n    }\n    toObject() {\n      return {\n        id: this.id.toObject(),\n        title: this.title,\n        parents: this.parents.map(v => v.toObject()),\n        metaData: this.metaData.toObject()\n      }\n    }\n  }\n  export class Id implements StringValueObject {\n    constructor(\n      readonly value: string\n    ){}\n    static create(num: number): Id {\n      return new Id('A' + num);\n    }\n\n    toObject(): any {\n      return this.value\n    }\n\n    eq(other: Id): boolean {\n      return other && this.value === other.value\n    }\n  }\n  \n  \n}\n","import {\n  Link,\n  MetaData,\n  Objective,\n  Action} from '../domain/domain'\nimport { DataStore } from './DataStore';\n\nexport class DataStoreImpl implements DataStore {\n  private callCount = 0;\n  private list: Objective.Entity[];\n  private actions: Action.Entity[];\n\n  static dataToObjectiveEntity(v): Objective.Entity {\n    return new Objective.Entity(\n      new Objective.Id(v.id),\n      v.title,\n      v.parent ? new Objective.Id(v.parent) : null,\n      new MetaData(\n        v.metaData.description, \n        v.metaData.members || [], \n        v.metaData.links ? v.metaData.links.map(v => new Link(v.name, v.path)) : [])\n    )\n  }\n\n  static dataToActionEntity(v): Action.Entity {\n    return new Action.Entity(\n      new Objective.Id(v.id),\n      v.title,\n      v.parents.map(v => new Action.Id(v)),\n      new MetaData(\n        v.metaData.description, \n        v.metaData.members || [], \n        v.metaData.links ? v.metaData.links.map(v => new Link(v.name, v.path)) : [])\n    )\n  }\n\n  findAll(callback: (err: Error, objectives: Objective.Entity[], actions: Action.Entity[]) => void) {\n    this.findAllObjective((err, objectives) => {\n      if(err) {\n        callback(err, null, null);\n        return;\n      }\n      this.findAllAction((err, actions) => {\n        if(err) {\n          callback(err, null, null);\n          return;\n        }\n        setTimeout(() => callback(null, objectives, actions), 100);\n      })\n    })\n  }\n\n  private findAllObjective(callback: (err: Error, entities: Objective.Entity[]) => void): void {\n    if(this.callCount > 0) {\n      throw '2回目の呼出です'\n    }\n    var raw = localStorage.getItem('objectiveTree');\n    if(!raw) {\n      raw = JSON.stringify([Objective.Entity.root()].map(v => v.toObject()));\n      localStorage.setItem('objectiveTree', raw);\n    }\n    console.log(raw);\n\n    this.list = JSON.parse(raw).map(v => DataStoreImpl.dataToObjectiveEntity(v))\n    setTimeout(() => callback(null, this.list), 100);\n  }\n\n  private findAllAction(callback: (err: Error, entities: Action.Entity[]) => void): void {\n    if(this.callCount > 0) {\n      throw '2回目の呼出です'\n    }\n    var raw = localStorage.getItem('actionTree');\n    if(!raw) {\n      raw = '[]';\n      localStorage.setItem('actionTree', raw);\n    }\n    console.log(raw);\n\n    this.actions = JSON.parse(raw).map(v => DataStoreImpl.dataToActionEntity(v))\n\n    setTimeout(() => callback(null, this.actions), 100);\n  }\n\n  updateObjective(entity: Objective.Entity, callback: (err) => void) {\n    for(var i = 0; i < this.list.length; i++) {\n      if(this.list[i].id.value == entity.id.value) {\n        this.list[i] = entity;\n        this.saveObjective();\n        setTimeout(() => callback(null), 100)\n        return;\n      }\n    }\n    setTimeout(() => callback(new Error(`entity not found: ${entity.id.value}`)), 100)\n  }\n\n  updateAction(entity: Action.Entity, callback: (err) => void) {\n    for(var i = 0; i < this.actions.length; i++) {\n      if(this.actions[i].id.value == entity.id.value) {\n        this.actions[i] = entity;\n        this.saveAction();\n        setTimeout(() => callback(null), 100)\n        return;\n      }\n    }\n    setTimeout(() => callback(new Error(`entity not found: ${entity.id.value}`)), 100)\n  }\n\n  insertObjective(entity: Objective.Entity, callback: (err:Error) => void) {\n    this.list.push(entity);\n    this.saveObjective();\n    setTimeout(() => callback(null), 100);\n  }\n\n  insertAction(entity: Action.Entity, callback: (err:Error) => void) {\n    this.actions.push(entity);\n    this.saveAction();\n    setTimeout(() => callback(null), 100);\n  }\n\n  removeObjective(id: Objective.Id, callback: (err:Error) => void) {\n    this.list = this.list.filter(v => !v.id.eq(id))\n    this.saveObjective();\n    setTimeout(() => callback(null), 100);\n  }\n\n  removeAction(id: Action.Id, callback: (err:Error) => void) {\n    this.actions = this.actions.filter(v => !v.id.eq(id))\n    this.saveAction();\n    setTimeout(() => callback(null), 100);\n  }\n\n  private saveObjective() {\n    const raw = JSON.stringify(this.list.map(v => v.toObject()));\n    console.log(raw);\n    localStorage.setItem('objectiveTree', raw);\n  }\n\n  private saveAction() {\n    const raw = JSON.stringify(this.actions.map(v => v.toObject()));\n    console.log(raw);\n    localStorage.setItem('actionTree', raw);\n  }\n}","import {\n  EntityIf,\n  StringValueObject\n} from '../domain/domain';\n\n\n\nexport class InMemoryDataStore<I extends StringValueObject, E extends EntityIf<I>> {\n  private entityMap: { [key: string]: E; };\n\n  constructor(entities: E[]) {\n    this.entityMap = {};\n    entities.forEach(v => this.entityMap[v.id.value] = v);\n  }\n\n  findAll(): E[] {\n    return Object.keys(this.entityMap).map(key => this.entityMap[key]);\n  }\n\n  findById(id: I): E {\n    return this.entityMap[id.value];\n  }\n\n  isExist(id: I) {\n    return this.entityMap[id.value] ? true : false;\n  }\n\n  update(entity: E) {\n    if (!this.isExist(entity.id)) {\n      throw new Error(`entity not found: ${entity.id.value}`);\n    }\n    this.entityMap[entity.id.value] = entity;\n    console.log('update inMemory');\n  }\n  insert(entity: E) {\n    if (this.isExist(entity.id)) {\n      throw new Error(`entity already exists: ${entity.id.value}`);\n    }\n    this.entityMap[entity.id.value] = entity;\n    console.log('insert inMemory');\n  }\n\n  remove(id: I) {\n    delete this.entityMap[id.value];\n  }\n}\n","import {\n  Objective,\n  Action\n} from '../domain/domain';\nimport { InMemoryDataStore } from './InMemoryDataStore';\nimport { ActionDataStore } from \"./ActionDataStore\";\n\nexport class ActionRepositoryImpl {\n  private inMemoryActionDataStore: InMemoryDataStore<Action.Id, Action.Entity>;\n  private parentMap: { [key: string]: Action.Id[]; } = {}; //key:親, value: 子たち\n\n  constructor(private dataStore: ActionDataStore, actions: Action.Entity[]) {\n    this.inMemoryActionDataStore = new InMemoryDataStore<Action.Id, Action.Entity>(actions);\n    this.onUpdate();\n  }\n\n  createId(callback: (err: Error, id: Action.Id) => void): void {\n    const num = Math.floor(Date.now() / 1000);\n    setTimeout(() => callback(null, Action.Id.create(num)), 100);\n  }\n\n  findAll(): Action.Entity[] {\n    return this.inMemoryActionDataStore.findAll();\n  }\n\n  findById(id: Action.Id) {\n    return this.inMemoryActionDataStore.findById(id);\n  }\n\n  /**\n   * 指定したIDに子要素はあるか？\n   * @param parentId \n   */\n  hasChildren(parentId: Objective.Id) {\n    return this.parentMap[parentId.value] ? true : false;\n  }\n\n  findChildren(parentId: Objective.Id): Action.Entity[] {\n    return (this.parentMap[parentId.value] || []).map(id => this.findById(id));\n  }\n\n  private onUpdate() {\n    this.parentMap = {}\n    this.findAll().forEach(v => {\n      v.parents.forEach(parent => {\n        if (!this.parentMap[parent.value]) {\n          this.parentMap[parent.value] = [];\n        }\n        this.parentMap[parent.value].push(v.id);\n      });\n    });\n  }\n\n  update(entity: Action.Entity, callback: (e) => void) {\n    if (!this.inMemoryActionDataStore.isExist(entity.id)) {\n      throw new Error(`entity not found: ${entity.id.value}`);\n    }\n    this.dataStore.updateAction(entity, (e) => {\n      if (e) {\n        callback(e);\n        return;\n      }\n      this.inMemoryActionDataStore.update(entity);\n      callback(null);\n    });\n  }\n\n  insert(entity: Action.Entity, callback: (e) => void) {\n    if (this.inMemoryActionDataStore.isExist(entity.id)) {\n      throw new Error(`entity already exists: ${entity.id.value}`);\n    }\n    this.dataStore.insertAction(entity, (e) => {\n      if (e) {\n        callback(e);\n        return;\n      }\n      this.inMemoryActionDataStore.insert(entity);\n      this.onUpdate();\n      callback(null);\n    });\n  }\n\n  remove(id: Action.Id, callback: (e) => void) {\n    if (!this.inMemoryActionDataStore.isExist(id)) {\n      throw new Error(`entity not found: ${id.value}`);\n    }\n    this.dataStore.removeAction(id, e => {\n      if (e) {\n        callback(e);\n        return;\n      }\n      this.inMemoryActionDataStore.remove(id);\n      this.onUpdate();\n      callback(null);\n    });\n  }\n}\n","import { Objective } from '../domain/domain';\nimport { InMemoryDataStore } from './InMemoryDataStore';\nimport { ObjectiveDataStore } from \"./ObjectiveDataStore\";\n\n\nexport class ObjectiveRepositoryImpl {\n  private inMemoryObjectiveDataStore: InMemoryDataStore<Objective.Id, Objective.Entity>;\n  private parentMap: { [key: string]: Objective.Id[]; } = {}; //key:親, value: 子たち\n\n  constructor(private dataStore: ObjectiveDataStore, objectives: Objective.Entity[]) {\n    this.inMemoryObjectiveDataStore = new InMemoryDataStore<Objective.Id, Objective.Entity>(objectives);\n    this.onUpdate();\n  }\n\n  createId(callback: (err: Error, id: Objective.Id) => void): void {\n    const num = Math.floor(Date.now() / 1000);\n    setTimeout(() => callback(null, Objective.Id.create(num)), 100);\n  }\n\n  findAll(): Objective.Entity[] {\n    return this.inMemoryObjectiveDataStore.findAll();\n  }\n\n  findById(id: Objective.Id) {\n    return this.inMemoryObjectiveDataStore.findById(id);\n  }\n\n  findParentsTree(rootId: Objective.Id): Objective.Entity[] {\n    const parentTrunkList: Objective.Id[] = [];\n    const findParentTrunk = (id: Objective.Id) => {\n      parentTrunkList.push(id);\n      const entity = this.findById(id);\n      if(entity.isNotRoot) {\n        findParentTrunk(entity.parent)\n      }\n    };\n    var current = this.findById(rootId);\n    if(current.isRoot) {\n      return [];\n    }\n    findParentTrunk(current.parent);\n    var result: Objective.Entity[] = [];\n    parentTrunkList.forEach(p => {\n      this.parentMap[p.value].forEach(v => result.push(this.findById(v)));\n    })\n    result.push(this.findById(parentTrunkList[parentTrunkList.length - 1]))\n    return result;\n  }\n\n  findUnder(rootId: Objective.Id) {\n    var getChildren = (rootId: Objective.Id): Objective.Entity[] => {\n      var list = [this.findById(rootId)];\n      if (!this.parentMap[rootId.value]) {\n        return list;\n      }\n      this.parentMap[rootId.value].forEach(ch => getChildren(ch).forEach(v => list.push(v)));\n      return list;\n    };\n\n    return getChildren(rootId);\n  }\n\n  private onUpdate() {\n    this.parentMap = {}\n    this.findAll().filter(v => v.parent).forEach(v => {\n      if (!this.parentMap[v.parent.value]) {\n        this.parentMap[v.parent.value] = [];\n      }\n      this.parentMap[v.parent.value].push(v.id);\n    });\n  }\n\n  update(entity: Objective.Entity, callback: (e) => void) {\n    if(!this.inMemoryObjectiveDataStore.isExist(entity.id)) {\n      callback(new Error('entity not found: ' + entity.id.value));\n        return;\n    }\n    this.dataStore.updateObjective(entity, (e) => {\n      if (e) {\n        callback(e);\n        return;\n      }\n      this.inMemoryObjectiveDataStore.update(entity);\n      this.onUpdate();\n      callback(null);\n    });\n  }\n\n  insert(entity: Objective.Entity, callback: (e) => void) {\n    if(this.inMemoryObjectiveDataStore.isExist(entity.id)) {\n      callback(new Error('entity already exists: ' + entity.id.value));\n        return;\n    }\n    this.dataStore.insertObjective(entity, (e) => {\n      if (e) {\n        callback(e);\n        return;\n      }\n      this.inMemoryObjectiveDataStore.insert(entity);\n      this.onUpdate();\n      callback(null);\n    });\n  }\n\n  remove(id: Objective.Id, callback: (e) => void) {\n    if (this.parentMap[id.value]) {\n      callback(new Error('children already exists'));\n    }\n    if(!this.inMemoryObjectiveDataStore.isExist(id)) {\n      callback(new Error('entity not found: ' + id.value));\n        return;\n    }\n\n    this.dataStore.removeObjective(id, e => {\n      if (e) {\n        callback(e);\n        return;\n      }\n      this.inMemoryObjectiveDataStore.remove(id);\n      this.onUpdate();\n      callback(null);\n    });\n  }\n}\n","import {\n  Link, \n  MetaData, \n  Objective, \n  Action\n} from './domain/domain'\n\nimport {\n  DataStoreImpl\n} from './infra/infra'\nimport { DataStore } from \"./infra/DataStore\";\nimport { ActionRepositoryImpl } from \"./infra/ActionRepositoryImpl\";\nimport { ObjectiveRepositoryImpl } from \"./infra/ObjectiveRepositoryImpl\";\ndeclare const mermaid: any;\nfunction q(selector) {\n  return document.querySelector(selector);\n}\nfunction qclick(selector, callback) {\n  return document.querySelector(selector).addEventListener('click', callback);\n}\n\n\nconst toMermaid = (entities: Objective.Entity[], actions: Action.Entity[]) => {\n  const map = {};\n  entities.forEach(v => map[v.id.value] = v);\n  const rectText = entities.map(v => `${v.id.value}[\"${v.title}\"]`).join('\\n');\n  const linkText = entities.map(v => `click ${v.id.value} \"./index.html#${v.id.value}\"`).join('\\n');\n  const arrowText = entities.filter(v => v.parent && map[v.parent.value]).map(v => `${v.id.value} --> ${v.parent.value}`).join('\\n');\n\n  const roundText = actions.map(v => `${v.id.value}(\"${v.title}\"):::action`).join('\\n');\n  const actionLinkText = actions.map(v => `click ${v.id.value} \"./index.html#${v.id.value}\"`).join('\\n');\n  const actionArrowText = actions.map(v => v.parents.map(p => `${v.id.value} --> ${p.value}`).join('\\n')).join('\\n');\n  return `\ngraph LR\nclassDef action fill:#ECFFEC, stroke: #93DB70;\n${rectText}\n${linkText}\n${arrowText}\n${roundText}\n${actionLinkText}\n${actionArrowText}\n  `.trim()\n}\nconst isObjectiveId = (id: string) => id[0] == 'O';\nconst isActionId = (id: string) => id[0] == 'A';\n\nconst dataStore: DataStore = new DataStoreImpl();\ndataStore.findAll((err, objectives, actions) => {\n  const objectiveRepository = new ObjectiveRepositoryImpl(dataStore, objectives)\n  const actionRepository = new ActionRepositoryImpl(dataStore, actions)\n  const onTreeUpdate = () => {\n    const idInHtml = q('#rootIdSpan').value;\n    const objectiveMap: { [key: string]: Objective.Entity } = {}\n    const actionMap: { [key: string]: Action.Entity } = {}\n    var objectives: Objective.Entity[] = [];\n    var parents: Objective.Id[] = null;\n    if(isObjectiveId(idInHtml)) {\n      parents = [new Objective.Id(idInHtml)]\n    } else if(isActionId(idInHtml)) {\n      const current: Action.Entity = actionRepository.findById(new Action.Id(idInHtml));\n      parents = current.parents;\n      parents.forEach(p => {\n        actionRepository.findChildren(p).forEach(v => {\n          actionMap[v.id.value] = v;\n        })\n      })\n    } else {\n      alert('未知のID');\n      throw new Error('未知のID');\n    }\n    parents.forEach(p => {\n      var underObjectives = objectiveRepository.findUnder(p);\n      underObjectives.forEach(v => {\n        objectiveMap[v.id.value] = v;\n        actionRepository.findChildren(v.id).forEach(v => {\n          actionMap[v.id.value] = v;\n        })\n      });\n      objectiveRepository.findParentsTree(p).forEach(v => objectiveMap[v.id.value] = v);\n    })\n    var element = document.querySelector(\"#profu\");\n    var text = toMermaid(Object.values(objectiveMap), Object.values(actionMap));\n    console.log(text);\n    mermaid.mermaidAPI.render('graphDiv', text, (svg) => element.innerHTML = svg);\n  }\n  onTreeUpdate();\n  \n  qclick('#applyRootIdButton', () => {\n    onTreeUpdate()\n  })\n  \n  const getMetaDataFormTextArea: () => MetaData = () => {\n    var text = q('#detailTextArea').value;\n    if(text.trim()[0] != '#') {\n      return new MetaData(text, [], []);\n    }\n    const obj = textToObj(text);\n    console.log(obj);\n    return new MetaData(\n      obj['説明'] || '', \n      obj['担当'] ? obj['担当'].split(',').map(v => v.trim()) : [],\n      obj['リンク'] ? obj['リンク'].map(v => new Link(v.name, v.path)) : []\n    );\n  }\n  \n  const setMetaDataToTextArea = (metaData: MetaData) => {\n    q('#detailTextArea').value = [\n      '# 説明: \\n' + metaData.description, \n      '', // 空行\n      '# 担当: ' + metaData.members.join(', '),\n      '# リンク: \\n' + metaData.links.map(v => `- [${v.name}](${v.path})`)\n    ].join('\\n');\n  }\n  \n  \n  const applyTargetId = () => {\n    if(isObjectiveId(q('#targetId').value)) {\n      const id = new Objective.Id(q('#targetId').value);\n      const objective = objectiveRepository.findById(id);\n      console.log(objective);\n      q('#idSpan').innerHTML = objective.id.value;\n      q('#titleInput').value = objective.title;\n      q('#parentsInput').value = objective.parent.value;\n      setMetaDataToTextArea(objective.metaData);\n      q('#linkUl').innerHTML = objective.metaData.links.map(v => `<li><a href=\"${v.path}\" target=\"_blank\">${v.name}</a></li>`).join('\\n')\n    } else if(isActionId(q('#targetId').value)) {\n      const id = new Action.Id(q('#targetId').value);\n      const action = actionRepository.findById(id);\n      console.log(action);\n      q('#idSpan').innerHTML = action.id.value;\n      q('#titleInput').value = action.title;\n      q('#parentsInput').value = action.parents.map(v => v.value);\n      setMetaDataToTextArea(action.metaData);\n      q('#linkUl').innerHTML = action.metaData.links.map(v => `<li><a href=\"${v.path}\" target=\"_blank\">${v.name}</a></li>`).join('\\n')\n    } else {\n      alert('未知のID');\n      throw new Error('未知のID');\n    }\n  }\n  \n  qclick('#applyTargetIdButton', applyTargetId)\n  \n  qclick('#createSubButton', () => {\n    q('#parentsInput').value = q('#idSpan').innerHTML;\n  \n    q('#idSpan').innerHTML = '';\n    q('#titleInput').value = '';\n    setMetaDataToTextArea(MetaData.empty());\n  })\n  \n  qclick('#saveButton', () => {\n    if(q('#idSpan').innerHTML.trim().length == 0) {\n      alert('ID未確定のため更新できません');\n      throw new Error('ID未確定のため更新できません');\n    }\n    const callbackOnSaved = (e) => {\n      if(e) {\n        console.error(e);\n        alert('エラー: ' + e.message);\n        return;\n      }\n      onTreeUpdate();\n    }\n    const idInHtml = q('#idSpan').innerHTML.trim();\n    if(idInHtml == q('#parentsInput').value) {\n      alert('IDとparentが同一です');\n      throw new Error('IDとparentが同一です');\n    }\n    if(isObjectiveId(idInHtml)) {// 目標の保存\n      const newEntity = new Objective.Entity(\n        new Objective.Id(idInHtml),\n        q('#titleInput').value,\n        new Objective.Id(q('#parentsInput').value),\n        getMetaDataFormTextArea()\n      )\n      objectiveRepository.update(newEntity, callbackOnSaved);\n    } else if(isActionId(idInHtml)) {// 施策の保存\n      const newEntity = new Action.Entity(\n        new Action.Id(q('#idSpan').innerHTML),\n        q('#titleInput').value,\n        q('#parentsInput').value.split(',').map(v => new Action.Id(v.trim())),\n        getMetaDataFormTextArea()\n      )\n      actionRepository.update(newEntity, callbackOnSaved);\n    } else {\n      alert('未知のID');\n      throw new Error('未知のID');\n    }\n  })\n  \n  qclick('#insertButton', () => {\n    objectiveRepository.createId((err, id) => {\n      const newEntity = new Objective.Entity(\n        id,\n        q('#titleInput').value,\n        new Objective.Id(q('#parentsInput').value),\n        getMetaDataFormTextArea()\n      )\n      objectiveRepository.insert(newEntity, (e) => {\n        console.log('callback');\n        if(e) {\n          console.error(e);\n          alert('エラー: ' + e.message);\n          return;\n        }\n        onTreeUpdate();\n      });\n    })\n  })\n  \n  qclick('#insertActionButton', () => {\n    actionRepository.createId((err, id) => {\n      const newEntity = new Action.Entity(\n        id,\n        q('#titleInput').value,\n        q('#parentsInput').value.split(',').map(v => new Objective.Id(v.trim())),\n        getMetaDataFormTextArea()\n      )\n      actionRepository.insert(newEntity, (e) => {\n        console.log('callback');\n        if(e) {\n          console.error(e);\n          alert('エラー: ' + e.message);\n          return;\n        }\n        onTreeUpdate();\n      });\n    })\n  })\n  \n  qclick('#removeButton', () => {\n    const idInHtml = q('#idSpan').innerHTML.trim();\n    if(isObjectiveId(idInHtml)) {// 目標削除\n      const objectiveId = new Objective.Id(idInHtml);\n      if(actionRepository.hasChildren(objectiveId)) {\n        alert('子要素を消してください');\n        throw new Error('子要素を消してください');\n      }\n      objectiveRepository.remove(\n        objectiveId,\n        (e) => {\n          if(e) {\n            alert(e.message);\n            throw e;\n          }\n          onTreeUpdate();\n        }\n      )\n      \n    } else if(isActionId(idInHtml)) {// 施策削除\n      actionRepository.remove(\n        new Action.Id(idInHtml),\n        (e) => {\n          if(e) {\n            alert(e.message);\n            throw e;\n          }\n          onTreeUpdate();\n        }\n      )\n    }\n  })\n\n  window.addEventListener('hashchange', (e) => {\n    q('#targetId').value = window.location.hash.slice(1);\n    applyTargetId();\n  })\n}) // dataStore.findAll callback\n\nif(location.hash) {\n  q('#targetId').value = window.location.hash.slice(1);\n}\n\n/* 特殊な記法\nキー、バリューになっている\nネスト不可\nバリューはテキスト or リンク配列\n\n# key: value\n\n# key: line1\nline2\nline3\n\n# key:\n- [name](url)\n\n*/ \nfunction textToObj(text) {\n  text = text.trim();\n  if(text[0] != '#') {\n    throw new Error('不正なテキスト');\n  }\n  return text.split('\\n').reduce((memo: string[][], v) => {\n    if(v.indexOf('# ') == 0) {\n      memo.push([v])\n    } else {\n      memo[memo.length - 1].push(v)\n    }\n    return memo;\n  }, []).reduce((memo, lines) => {\n    const key = lines[0].split('#')[1].split(':')[0].trim();\n    lines[0] = lines[0].indexOf(':') != -1 ? lines[0].slice(lines[0].indexOf(':') + 1) : '';\n    var value = lines.join('\\n').trim();\n    if(value.indexOf('- [') == 0) {\n      value = value.split('\\n').map(v => {\n        return {\n          name: v.split('[')[1].split(']')[0],\n          path: v.split('(')[1].split(')')[0],\n        }\n      }).reduce((memo, v) => {\n        memo.push(v);\n        return memo;\n      }, [])\n    }\n    memo[key] = value;\n    return memo;\n  }, {})\n}\n\n"]}